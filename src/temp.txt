const { Router } = require("express");
// step1: multer is used to to get access to the file in nodejs.
// step2: always write s2 upload function separately- in a separate file/function.., expect it to take file as input and return the uploaded file as output
// step3: aws-sdk  install - as package
// step4: setupconfig      

aws.config.update({
    accessKeyId: "AKIAY3L35MCRVFM24Q7U",
    secretAccessKeyId: "qGG1HE0qRixcW1TWg1bv+08tQrIkFVyDFqSft4J",
    region: "ap-south-1"
})

let uploadFile = async ( file ) => {
    return new Promise((resolve, reject) => {
    // this function will upload file to aws and return the link
    let s3 = new aws.S3({apiVersion: '2006-03-01'}) //we will be using the s3 service of aws
    var uploadParams = {
        ACL : "public-read",
        Bucket: "classroom-training-bucket",
        Key: "abc/" + file.originalName, // typically we should add timestamp also here
        Body: file.buffer
    }

    s3.upload(uploadParams, function(err, data) {
        if(err) {
            return reject({"error": err})
        }
            console.log(data);
            console.log("file uploaded successfully")
            return resolve(data.Location);
    })

    // let data = await s3.upload(uploadParams);
    // if(data) return data.Location;
    // else return "there is an error";
})
}

Router.post("/write-file-aws", function(req,res) {
    try {
        let files = req.files;
        if(files && files.length>0) {
            // upload to S3 and get the uploaded link
            // res.send the link back to frontend/postman
            let uploadedFileURL = await uploadFile(files[0])
            res.status(201).send({msg: "file uploaded successfully", data: uploadedFileURL});
        } else {
            res.status(400).send({msg: "No file found"});
        }
    }catch(err) {
        res.status(500).send({msg: err.message})
    }
})